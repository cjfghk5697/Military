1)서버 취약점 점검도구
Nessus:서버-클라이언트 구조로 작동하는 취약점 점검도구
SARA(SATAN):서버, IDS, 라우터 등의 보안 분석도구
NIKTO2:웹 서버 스캔해서 취약점 점검(오픈 소스)

2) 무결성 점검도구
trpwire:가장 대표적인 무결성 점검도구로써, 시스템의 모든 파일에 대해 DB를 만들어서 추후 변동사항을 점검
Fcheck: tripwire보다 조금 더 간편한 설치와 설정

3) 대처방법
 * dos
	-시스템 과부화

 *SYN FLOODING
	-공격자가 임의로 자신의 ip를 속인뒤 서버로 다량의 syn패킷을 보내서 서버를 대기상태로 만드는 공격
	-서버는 계속 ack 패킷을 기다리는데 모든 자원을 쏟아붇게 되고 정상적인 서비스가 불가능해짐
	--탐지방법
		---syn패킷을 받으면 카운트를 늘리고 ack을 보내면 카운트를 줄여서, 특정 기간 내에 카운트가 높으면 syn flooding
	--조치 방법
		----connect queue size를 증가시킴
		----syn cookie size를 늘림
		----router 단에서 서브넷 외의 주소를 가지는 소스 ip를 가지는 패킷을 차단

*UDP Flooding
	--공격자가 UDP로 서버에 가상의 데이터를 연속적으로 보내서, 서버의 부하 및 네트워크 오버로드를 발생
	--조치 방법: 불필요한 UDP 서비스를 차단
* Smurfing(=smurf)
	--Broadcast 주소로 ICMP_REQUEST로 보내서 이에 대한 ICMP_ECHO_REPLY를 공격지로 보내는 방법
	--조치방법
		---Router에서 Direct Broadcast 패킷은 차단
		---Host에서 Broacast로 저달된 ICMP에 대해서는 응답 안하게 설정

*Teardrop
	--Header가 조작된 일련의 IP 패킷 조각들을 전송해서 공격이 이루어짐
	--Offset값을 일부로 이전 값보다 작게 음수로 만들어서 보내므로, 재조립과정에서 에러가 발생->블루스크린

*Ping of Death
	--IP 패킷 최대 사이즈보다 큰 ICMP Request를 보내는 공격
	--패킷 재조립 과정에서 Buffer Overflow 및 시스템 충돌이 일어남
	--IP 패킷 사이즈를 검증하는 설정을 추가

*Land Attack
	--목적지, 출발지 IP와 Port가 모두 동일하게 보내는 공격
	--시스템 자원을 고갈시켜 서비스 장애를 유발시킴
	--방화벽 단에서 필터링하도록 설정(요샌 다 되어있지)

*DDoS
	--공격 시스템을 분산배치해서 동시에 대량 트래픽을 발생시키는 공격(Zombie PC)
	--DRDoS(반사하는 거임)
*스니핑 대응
	--Switching 환경으로 네트워크 설계
	--ARP Cache Table을 정적으로 운영
	--데이터의 암호화

*패킷 필터링
	--패킷 필터링(Packet Filtering) 방식
		---Network Layer와 Transport Layer에서 동작하는 방식
		---일반적으로 스크린 라우터를 이용해 방화벽 방식
	--어플리케이션 게이트웨이(Application Gateway) 방식
		---Applicatin Layer에서 동작하는 방식 
		---침입 차단시스템의 Proxy를 이용해 사용 가능
		---외부네트워크와 내부 네트워크가 오직 Proxy를 통해서만 연결
		---Application Layer에서 동작하므로 네트워크에 많은 부하를 줄 수 있고 하드웨어에 의존적임
	--서킷 게이트웨이(Circuit Gateway)
		---하나의 일반 게이트웨이로 모든 서비스가 처리 가능한 방식
		---session Layer, Presentaion Layer, Application Layer에서 동작
		--- 게이트웨이 사용을 위해 수정된 클라이언트 모듈이 필요함/ 지원불가능한 프로트콜이 있을 수 있음.
	--상태 검사
		---기본적으로 패킷 필터링 방식을 사용
		---서버-클라이언트 모델을 유지시키면서 모든 Layer의 전후 상황에 대한 문맥을 제공
		---패킷 필터링 방식, 응용 게이트웨이 방식, 서킷 게이트웨이 방식의 단점을 보완

*VPN
	--터널링 기술, key 관리기술, vpn 관리기술을 이용해 공용망을 마치 전용선처럼 이용함
	--터널링 프로토콜
		--터널링: 송수신자 사이의 전송로에 외부로부터의 침입을 막기위해 일종의 파이프를 구성하는 기술.
	--페이로드: 터널링 되는 데이터

*라우터 보안 설정

* DRDOS
	-DDOS와의 차이점
		--출발지 주소를 속임(IP SPOOF)
		--공격의 근원지 추적하기가 힘듬
		--봇x
		--정상적인 응답 패킷으로 공격함

	-대응
		--ISP에서 출발지가 변조된 공격패킷을 차단
		--짧은 시간 동안에 일어나는 연결 실패를 필터링해서 해당 출발지 IP를 블랙리트스 처리

* 봇넷을 이용한 공격
	-bOT: 다른 프로그램을 흉내내는 프로그램
	-Zombie Pc: bot에 감염되어 공격자로부터 제어되는 시스템
	-Botnet: zombiepc가 이루는 네트워크
		--중앙집중형 구조: Bot관리자가 중앙에 위치해서, Bot에게 명령 제어하는 구성
		--분산형 구조: P2P 방식으로 C&C 서버 없이 Zombie PC인 구성
	- 공격방식
		--공격을 위해 Bot 개발, 다양한 경로로 Zombie PC 만듦
		-- 공격을 위한 C&C 서버를 통해 IRC챠널에 접속하면,  ZombiePC는 명령을 전달 빋기 위해 대기함

4) 보안
	-역추적 시스템(Traceback)
		-공격을 시도하는 공격자의 네트워크 상의 실제 위치를 실시간으로 추적하는 기술
		-사람에 의한 역추적
			--시스템에 남아있는 Log를 분석해 역추적/ Log를 찾아내고 분석하는데 많은 시간과 인력이 필요
		-TCP연결 역추적
			--호스트 기반 연결 역추적
			--네트워크 기반 역추적
		-ip패킷 역추적

	-침입 방지시스템(IPS)
		-IPS: 침입 탐지와 차단을 함께 수행하는 실시간 보안 장비
		-Firewall은  Network Layer와 Transport Layer를 검사하지만, IDS/IPS은 Network Layer부터 Application Layer까지 검사

	-ESM
		-전사적 보안관리 솔루션으로, IDS/IPS,Switch,Router등 각종 이기종 보안솔루션을 중앙에서 하나의 콘솔로 관리하는 보안 솔루션
		-동일 제품의 경우에는 운영관리 기능이 좋겠지만, 이기종 제품이나 타사 제품에 대해서는 원격관리나 로그분석 기능 정도 제공하는 수준

	-NAC
		-네트워크 접근제어
		-네트워크에 접근하는 모든 기기의 보안상태를 점검, 안적이 확인된 기기만 접근시키는 보안 솔루션
		-안전이 취약한 기기를 발생했다고 해서 능동적으로 제거를 하는 솔루션은 아님
		-백신의 설치 유무/업데이트 유무 등 강제적인 의무사항을 이행했는지만 확인함
