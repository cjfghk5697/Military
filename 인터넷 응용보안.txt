-FTP
	--FTP는 데이터를 수신 전송 하는데 쓰는 프로토콜
	--암호화되지 않기에, 사생활 보호 또는 개인정보 보호기능을 제공하지 않음
	
	--FTP는 제어를 하기 위한 연결과 데이터 전송을 위한 연결을 따로 사용해서 효율적이고 신뢰성있는 데이터 전송을 제공
	--FTP는 제어를 위한 연결을 할 때엔 21번 포트를 사용 / FTP 세션 동안 계속 유지
	--FTP는 데이터 전송을 위한 연결을 할때엔 20번 포트를 사용 / 파일 전송하는 동안 유지
	
	--Active Mode: 많이 쓰이는 방식으로, 클라이언트가 서버에게 자신이 어떤 포트로 데이터를 전송하지 알려주는 방식
	
	--Passvie Mode: 방화벽과같은 보안솔루션 때문에 FTP를 사용해야하는 문제점을 해결.
	--Active Mode와 달리, 서버가 클라이언트로 자신이 데이터를 보내고자 하는 포트를 정하는 방식
	--Anonymous FTP: 사용자들이 할당 받은 ID없이도 FTP서버에  접근하고 서비스를 이용할 수 있게 해줌
	
	--TFTP: FTP보다 간단하고 최소한의 기능만 제공해주는 프로토콜. 
	-- Unix/Linux에서 사용자 별로 FTP Server에 접근 제어를 하려면
	--windows에서는 FTP Server를 만드려면 IIS가 설치되어야함

-FTP Bounce Attack
	--FTP 서버가 데이터를 전송할 때, 목적지를 검사하지 않는 설계상의 문제점을 이용한 공격
	--공격자가 FTP 서버를 거쳐 간접적으로 임의의 호스트에 접근하거나 존재 여부를 파악가능
	--포트 스캐닝에 쓰일 수 있음.
-Anonymour FTP Attack
	--Anonymous계정 허용하는 게 위험해.

-TFTP Attack
	--위에서 언급했드시, Brute Force Attack이나 Dictionary Attack 등으로
	--TFTP 데몬을 Secure Mode로 작동하게 설정
	--TFTP 데몬을 필요없으면 제거해

-FTP 보안대책
	--FTP서버접속시/ Root로 접속하는 것을 차단
	--Anonymous FTP서버의 경우, 디렉토리 소유자와 파이썬 관리를 철저히
	--불필요한 TFTP는 제거
	--FTP 자체의 취약점은 없는지 주기적으로 업데이트

2)MAIL
-MUA:사용자가 메일을 송수신하기 위해 사용하는 프로그램
-MTA:MUA로 부터 전달받은 메일을 다른 MTA로 전송하는 서버 프로그램
	--MTA는 STMP를 이용해 다른 MTA로 메일을 전달함.
-MDA:최종 MTA에 도착한 후, 수신된 메일을 사용자의 메일함에 저장하는 프로그램
	--최종 MTA가 MDA의 역할을 한다고 생각하면될듯
-MRA:MDA가 저장한 메일을 MUA로 가져오는 프로그램/ 아이디와 패스워드로 사용자 인증도함

-MIME: 이메일을 위한 인터넷 표준 포맷

*Active Contents Attack
--메일 열람시 , CSS가 실행되 컴퓨터 정보를 유출하거나 악성프로그램을 실행시키는 공격
--대응: 스크립팅 기능을 제거 / 스크립트 태그를 다른 이름으로 바꾸어 저장

*Malware Attack
-이메일 첨부파일을 실행하도록 유도해서 악성프로그램이 실행되도록 하는 공격
-자극적이거나 업무와 관련된 파일인척 문서 파일을 열람하게 만듬

3) SPAM 대책
- SPAM의 유형
	--Incoming SPAM: 자신의 메일 서버를 이용해 전송
	--Relay SPAM: 중계메일 서버를 이용해 전송
-메일 서버 자체의 보안 및 보호
	--하나의 서버에 메일 서버, 웹 서버 등을 같이 운영을 많이 하는데, 규모가 커지면 메일 서버를 따로 두는게 바람직함
	--메일서버를 따로 두고, 리눅스나 윈도우즈의 취약점 제거에 힘쓰는게 좋음
-access DB의 활용
	--위에 SPAM의 유형에서 Relay SPAM이라는 게 있는데, 메일 서버를 Relay 서버롤 사용할 것이냐에 대한정책임
	--/etc/mail/access 파일에 기술하면 됨.
	--특정 호스트나 도메인에 대한 접근 제어를 해서, 무조건 적인 허용은 피하는 게 좋음

-SPAM Assassin
	--메일의 헤더와 내용을 실시간으로분석해 스팸메일 여부를 판단.
	--판단 기준은 RBL를 참고해 몇가지 룰에 매칭될 때마다 점수를 줘서, 기준 점수이상이면 스팸메일이됨.

-Inflex
	--메일 서버에, 로컬이나 외부로 나가는 이메일을 검사허여 Inbound, Outbound 정책을 세워 필터링 해주는 도구


4)Mail 보안 기술
	-전자메일에서 필요로 하는 보안 기술
		--기밀성/ 메세지 인증/사용자 인증/송수신 부인방지/메시지 재전송 방지
	-PGP(Pretty Good Privacy)
		--MIME 포멧에 암호화와 전자서명을 추가
		--전자메일에 기밀성/ 메세지 무결성/ 사용자 인증/ 송신 부인방지를 제공
		--메시지의 암호화:IDEA / RSA/ 등
			---메세지를 idea/ rsa / 등
			---idea의 키를 수신자의 공개키로 암호화
			---암호화된 메시지와 암호화한 IDEA키를 함께 보냄
		--메시지 인증과 사용자 인증: RSA/MDS
			---메시지의 해시값을 송신자의 공개키로 암호화
		--압축:전자서명 후, 메시지를 압축
		--키관리:RSA
	-PEM(Privacy Enhanced Mail)
		--IETF에 의해 만들어진 인터넷 표준안으로 PGP보다 보안능력이 뛰어난편.
		--전송하기 전 자동으로 암호화하여 전동 도중 스니핑당해도 내용은 확인 불가능.
		--중앙집중식 키 인증 방식
	--S/MIME(Secure/MIME)
		--Application Layer에서 보안을 제공하는 대표적인 프로토콜
		--MIME객체에 암호화와 전자서명 기능 추가.
		--PKI인증서를 사용

5) WEB 서비스 공격
	-Directory Listing
		--웹서버 설정만 해주면 대응이 됨.
	-SQL Injection
		--공격에 사용될 수 있는 문자나 패턴을, 웹 방화벽이나 Secure Coding을 통해 필터링
		--자세한 오류메시지를 보내주지 않음으로 DB정보를 흘리지않기
	-XSS
		--공격자가 작성한 악성 css를 일반 사용자가 읽음으로써 실행되게하는 공격
		--서버를 공격하는 게 아니라, 서버를 경유해 클라이언트를 공격하는 것
		--사용자로부터 입력된 데이터를 철저히 검증함으로써 검증
	-CSRF
		--XSS와 공격과정은 동일하지만, 타겟이 서버임.
		--웹사이트에서 제공하는 모든 기능을 대상으로, 신뢰된 사용자의 권한으로 용청하도록하는 공격
		--XSS 취약점을 없도록해야함/ 중요한 기능은 재인증을 요구

6)DNS
	-DNS Spoofing
		--공격자가 호스트의 쿼리를 스니핑하고, DNS Server보다 먼저 조작된 IP주소가 담긴 응답을 보냄
		--DNS는 Query에 대한 인증을 수행하지 않기에 피해자는 조작된 ip주소로 접속
	-DNS Cache Poisoning
		--DNS Server에 조작된 응답을전송, 조작된 정보를 DNS Server가 cache에 저장하게 됨
		--dns query시 부여되는 Transcation ID와 출발지/ 목적지 포트가 예상하기 쉬운 값을 사용하게 되면 공격 가능
			--강력한 난수 생성기 써도, 공격시간을 지연시킬뿐
	-dnssec
		-DNS에 공개키 암호화 방식의 전자서명을 추가부여.
		-DNS프로토콜 자체가 데이터의 위조변조에 취약함.
		
		

	
